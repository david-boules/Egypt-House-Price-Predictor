# -*- coding: utf-8 -*-
"""house-price-web-app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1an4tEI6kQVYKDFLxj33kIXYZGtMy6pGN
"""

import pandas as pd
import numpy as np
import streamlit as st
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import StandardScaler
import pickle

with open('best_model.pkl', 'rb') as file:
  model = pickle.load(file)

st.title("House Price Predictor :house:")

Bedrooms = st.select_slider('How many Bedrooms are in this house? ', [1,2,3,4,5,6,7,8,9,10])
Bathrooms = st.select_slider('How many Bathrooms are in this house? ', [1,2,3,4,5,6,7,8,9,10])
Area = st.number_input('What is the area of the house? (in m^2)', min_value=10, max_value=1000)

Furnished = st.radio('Is the property furnished? ', ('Yes', 'No'))
Level = st.radio('Which floor is the house on? ', ('Unknown', 'Ground', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, '10+', 'Highest'))
Compound = st.radio('Is the house in a compound? ', ('Yes', 'No'))
Delivery_Date = st.radio('Is the property ready to move into? ', ('Ready to Move', 'Not ready to Move'))
Delivery_Term = st.radio('Is the property finished or not? ', ('Unknown', 'Finished', 'Not Finished'))

Type = st.radio('Select the property type: ', ('Duplex', 'Apartment', 'Penthouse', 'Studio', 'Chalet', 'Stand Alone Villa', 'Twin House', 'Town House'))
Payment_Option = st.radio('What is the payment option? ', ('Cash', 'Cash or Installment', 'Installment', 'Unknown'))
Region = st.radio('What region is the house located in? ', ('Cairo', 'Delta Region', 'Giza and Suburbs', 'New Cairo', 'New Cities', 'North Coast', 'Red Sea', 'Suez Canal Cities', 'Upper Egypt'))

features = [Bedrooms, Bathrooms, Area, Furnished, Level, Compound, Delivery_Date, Delivery_Term, Type, Payment_Option, Region]
for feature in features:
  print(feature)

for feature in features:
  print(type(feature))

df = pd.read_csv("encoded_data_for_model.csv")
df.head()

#Standardize Area
scaler = StandardScaler()
area_scaled = scaler.fit_transform([[10], [995]])
Area = scaler.transform([[Area]])
Area=Area[0][0]

#Encode Type, Payment_Option, Region



X = pd.DataFrame({'Bedrooms': [Bedrooms], 'Bathrooms': [Bathrooms], 'Area': [Area], 'Furnished': [Furnished], 'Level': [Level], 'Compound': [Compound], 'Delivery_Date': [Delivery_Date], 'Delivery_Term': [Delivery_Term], 'Type_Chalet': [0], 'Type_Duplex': [0], 'Type_Penthouse': [0], 'Type_Stand Alone Villa': [0], 'Type_Studio': [0], 'Type_Town House': [0], 'Type_Twin House': [0], 'Payment_Option_Cash or Installment': [0], 'Payment_Option_Installment': [0], 'Payment_Option_Unknown': [0], 'Region_Cairo': [0], 'Region_Delta Region': [0], 'Region_Giza and Suburbs': [0], 'Region_New Cairo': [0], 'Region_New Cities': [0], 'Region_North Coast': [0], 'Region_Red Sea': [0], 'Region_Suez Canal Cities': [0], 'Region_Upper Egypt': [0]})
X.head()

#Binary Encoding:
if Furnished == 'Yes':
  X['Furnished'] = 1
elif Furnished == 'No':
  X['Furnished'] = 0

if Level == 'Unknown':
  X['Level'] = -1
elif Level == 'Ground':
  X['Level'] = 0
elif Level == '10+':
  X['Level'] = 11
elif Level == 'Highest':
  X['Level'] = 12

if Compound == 'Yes':
  X['Compound'] = 1
elif Compound == 'No':
  X['Compound'] = 0

if Delivery_Date == 'Ready to Move':
  X['Delivery_Date'] = 1
elif Delivery_Date == 'Not ready to Move':
  X['Delivery_Date'] = 0

if Delivery_Term == 'Unknown':
  X['Delivery_Term'] = -1
elif Delivery_Term == 'Finished':
  X['Delivery_Term'] = 1
elif Delivery_Term == 'Not Finished':
  X['Delivery_Term'] = 0

#One-Hot-Encoding:
if Type == 'Chalet':
  X['Type_Chalet'] = 1
elif Type == 'Duplex':
  X['Type_Duplex'] = 1
elif Type == 'Penthouse':
  X['Type_Penthouse'] = 1
elif Type == 'Stand Alone Villa':
  X['Type_Stand Alone Villa'] = 1
elif Type == 'Studio':
  X['Type_Studio'] = 1
elif Type == 'Town House':
  X['Type_Town House'] = 1
elif Type == 'Twin House':
  X['Type_Twin House'] = 1

if Payment_Option == 'Cash or Installment':
  X['Payment_Option_Cash or Installment'] = 1
elif Payment_Option == 'Installment':
  X['Payment_Option_Installment'] = 1
elif Payment_Option == 'Unknown':
  X['Payment_Option_Unknown'] = 1

if Region == 'Cairo':
  X['Region_Cairo'] = 1
elif Region == 'Delta Region':
  X['Region_Delta Region'] = 1
elif Region == 'Giza and Suburbs':
  X['Region_Giza and Suburbs'] = 1
elif Region == 'New Cairo':
  X['Region_New Cairo'] = 1
elif Region == 'New Cities':
  X['Region_New Cities'] = 1
elif Region == 'North Coast':
  X['Region_North Coast'] = 1
elif Region == 'Red Sea':
  X['Region_Red Sea'] = 1
elif Region == 'Suez Canal Cities':
  X['Region_Suez Canal Cities'] = 1
elif Region == 'Upper Egypt':
  X['Region_Upper Egypt'] = 1

X.head()

if st.button('Predict'):
  prediction = model.predict(X)[0]
  st.success(f'Predicted Price: {prediction}')

